<Window x:Class="AppDirect.WindowsClient.UI.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:local="clr-namespace:AppDirect.WindowsClient.UI" xmlns:sys="clr-namespace:System;assembly=mscorlib"
        Title="MyApps" Height="{StaticResource WindowHeight}" Width="{StaticResource WindowWidth}" 
        WindowStartupLocation="Manual" 
        Background="Transparent"
        WindowStyle="None"
        AllowsTransparency="True"
        Closing="MainWindow_OnClosing">
    <Window.Resources>
        <sys:Double x:Key="WindowHeight">330</sys:Double>
        <sys:Double x:Key="WindowWidth">680</sys:Double>
        <GridLength x:Key="RightColumnWidth">248</GridLength>
        <sys:Double x:Key="RightPanelWidth">248</sys:Double>
        <GridLength x:Key="LeftColumnWidth">432</GridLength>
        <sys:Double x:Key="LeftPanelWidth">432</sys:Double>
        <FontFamily x:Key="DefaultWindowFont">Arial</FontFamily>
        <SolidColorBrush x:Key="LeftPanelColor" Color="#000000" />
        <SolidColorBrush x:Key="RightPanelColor" Color="#000708" />
        <SolidColorBrush x:Key="TextFieldFocusColor" Color="#4aa0ce" />
        <SolidColorBrush x:Key="MiddleBarColor" Color="#20393e" />
        <SolidColorBrush x:Key="BorderFocusColor" Color="#a4c8df" />
        <SolidColorBrush x:Key="LoginPanelColor" Color="#0c2228" />
        <SolidColorBrush x:Key="DefaultTextColor" Color="#dfdfdf" />
        <SolidColorBrush x:Key="ErrorTextColor" Color="#f13737" />
        <SolidColorBrush x:Key="TextFieldDefaultColor" Color="#36454d" />
        <SolidColorBrush x:Key="SolidBorderBrush" Color="#888" />
        <Style x:Key="TextStyle" TargetType="TextBlock">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="{StaticResource DefaultTextColor}"/>
            <Setter Property="FontFamily" Value="{StaticResource DefaultWindowFont}" />
        </Style>
        <Style x:Key="TextStyleBold" TargetType="TextBlock" BasedOn="{StaticResource TextStyle}">
            <Setter Property="FontWeight" Value="Bold"/>
        </Style>
        <Style x:Key="LeftMenu" TargetType="TabItem">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TabItem">
                        <Grid>
                            <Border Name="Border" 
                                    Margin="0" 
                                    Background="Transparent"
                                    BorderBrush="{StaticResource SolidBorderBrush}" 
                                    BorderThickness="0">
                                <ContentPresenter x:Name="ContentSite"
                                    VerticalAlignment="Center"
                                    HorizontalAlignment="Center"
                                    ContentSource="Header"
                                    Margin="0"
                                    RecognizesAccessKey="True"/>
                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter Property="Panel.ZIndex" Value="100" />
                                <Setter TargetName="Border" Property="Background" Value="Transparent" />
                                <Setter TargetName="Border" Property="BorderThickness" Value="0" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <EventTrigger RoutedEvent="Selector.Unselected">
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity">
                                <LinearDoubleKeyFrame KeyTime="0:0:1" Value="0"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>
                <EventTrigger RoutedEvent="Selector.Selected">
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity">
                                <LinearDoubleKeyFrame KeyTime="0:0:1" Value="1"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="InstallAppButton" TargetType="Button">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="FontFamily" Value="{StaticResource DefaultWindowFont}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Name="border" Background="{TemplateBinding Background}" CornerRadius="2" BorderThickness="0">
                            <ContentPresenter Name="content" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                      Margin="{TemplateBinding Padding}"
                                      RecognizesAccessKey="True"
                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="BorderBrush" Value="DimGray" />
                                <Setter Property="Foreground" Value="#edd4a6" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Content" Value="LightYellow" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="BorderlessButton" TargetType="Button">
            <Setter Property="Margin" Value="0,1,1,1"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="Foreground" Value="White" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Name="border" Background="{TemplateBinding Background}" CornerRadius="2" BorderThickness="0">
                            <ContentPresenter Name="content" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                      Margin="{TemplateBinding Padding}"
                                      RecognizesAccessKey="True"
                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#e0e0e0"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <ContextMenu x:Key="UninstallContextMenu">
            <MenuItem Header="Uninstall" Click="UninstallAppClick" DataContext="{Binding}"/>
        </ContextMenu>
        <Style x:Key="AppButton" TargetType="Button" BasedOn="{StaticResource BorderlessButton}">
            <Setter Property="Height" Value="45"/>
            <Setter Property="Width" Value="165"/>
            <Setter Property="VerticalAlignment" Value="Top"/>
            <Setter Property="Margin" Value="0,0,30,2"></Setter>
            <Setter Property="ContextMenu" Value="{StaticResource UninstallContextMenu}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Name="border" Background="{TemplateBinding Background}" CornerRadius="2" BorderThickness="0">
                            <ContentPresenter Name="content" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                      Margin="{TemplateBinding Padding}"
                                      RecognizesAccessKey="True"
                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background">
                                    <Setter.Value>
                                        <ImageBrush ImageSource="Images\AppBtnHover.png" />
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="MainButtonStyle" TargetType="Button">
            <Setter Property="Margin" Value="0,1,1,1"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="Foreground" Value="LightGray" />
            <Setter Property="FontSize" Value="12"/>
            <Setter Property="Background">
                <Setter.Value>
                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                        <GradientStop Color="#2e6d90" Offset="0"/>
                        <GradientStop Color="#1a597a" Offset="0.05"/>
                        <GradientStop Color="#134256" Offset="0.4"/>
                    </LinearGradientBrush>
                </Setter.Value>
            </Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Name="border" Background="{TemplateBinding Background}" BorderThickness="0" CornerRadius="3">
                            <ContentPresenter Name="content" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                      Margin="{TemplateBinding Padding}"
                                      RecognizesAccessKey="True"
                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background">
                                    <Setter.Value>
                                        <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                            <GradientStop Color="#748a96" Offset="0"/>
                                            <GradientStop Color="#587381" Offset="0.05"/>
                                            <GradientStop Color="#585381" Offset="0.4"/>
                                        </LinearGradientBrush>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="LoginButtonDefault" TargetType="Button" BasedOn="{StaticResource MainButtonStyle}">
            <Setter Property="Margin" Value="0,1,1,1"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="Foreground" Value="DimGray" />
            <Setter Property="FontSize" Value="12"/>
            <Setter Property="Background">
                <Setter.Value>
                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                        <GradientStop Color="#3a444d" Offset="0"/>
                        <GradientStop Color="#2f3942" Offset="0.05"/>
                        <GradientStop Color="#1c272d" Offset="0.4"/>
                    </LinearGradientBrush>
                </Setter.Value>
            </Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Name="border" Background="{TemplateBinding Background}" BorderThickness="0" CornerRadius="2">
                            <ContentPresenter Name="content" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                      Margin="{TemplateBinding Padding}"
                                      RecognizesAccessKey="True"
                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background">
                                    <Setter.Value>
                                        <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                            <GradientStop Color="#748a96" Offset="0"/>
                                            <GradientStop Color="#587381" Offset="0.05"/>
                                            <GradientStop Color="#46616e" Offset="0.4"/>
                                        </LinearGradientBrush>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--<Style x:Key="YourAppsButtonGrid" TargetType="StackPanel">
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="VerticalAlignment" Value="Top"/>
            <Setter Property="Width" Value="150"/>
            <Setter Property="Height" Value="44"/>
                    <Setter Property="Background">
                <Setter.Value>
                    <ImageBrush ImageSource="Images\AppBtnDefault.png"/>
                </Setter.Value>
            </Setter>
        </Style>-->
        <Style x:Key="TopPanelButton" TargetType="Button" BasedOn="{StaticResource BorderlessButton}">
            <Setter Property="Margin" Value="0,0,0,6"/>
            <Setter Property="VerticalAlignment" Value="Bottom"/>
            <Setter Property="HorizontalAlignment" Value="Center" />
        </Style>
        <Style x:Key="AlertsButton" TargetType="Button" BasedOn="{StaticResource TopPanelButton}" >
            <Setter Property="Background">
                <Setter.Value>
                    <ImageBrush ImageSource="Images\alertGrey.png"/>
                </Setter.Value>
            </Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Name="border" Background="{TemplateBinding Background}" CornerRadius="2" BorderThickness="0">
                            <ContentPresenter Name="content" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                      Margin="{TemplateBinding Padding}"
                                      RecognizesAccessKey="True"
                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background">
                                    <Setter.Value>
                                        <ImageBrush ImageSource="Images\alertWhite.png" />
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="Foreground" Value="{StaticResource DefaultTextColor}">
                                </Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="CloudSyncButton" TargetType="Button" BasedOn="{StaticResource TopPanelButton}" >
            <Setter Property="Background">
                <Setter.Value>
                    <ImageBrush ImageSource="Images\cloudGrey.png"/>
                </Setter.Value>
            </Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Name="border" Background="{TemplateBinding Background}" CornerRadius="2" BorderThickness="0">
                            <ContentPresenter Name="content" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                      Margin="{TemplateBinding Padding}"
                                      RecognizesAccessKey="True"
                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background">
                                    <Setter.Value>
                                        <ImageBrush ImageSource="Images\cloudWhite.png" />
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="Foreground" Value="{StaticResource DefaultTextColor}">
                                </Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="MyAppsButton" TargetType="Button" BasedOn="{StaticResource TopPanelButton}" >
            <Setter Property="Background">
                <Setter.Value>
                    <ImageBrush ImageSource="Images\myAppWhite.png"/>
                </Setter.Value>
            </Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Name="border" Background="{TemplateBinding Background}" CornerRadius="2" BorderThickness="0">
                            <ContentPresenter Name="content" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                      Margin="{TemplateBinding Padding}"
                                      RecognizesAccessKey="True"
                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background">
                                    <Setter.Value>
                                        <ImageBrush ImageSource="Images\myAppWhite.png"/>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="CloseLoginButton" TargetType="Button" BasedOn="{StaticResource BorderlessButton}" >
            <Setter Property="Background">
                <Setter.Value>
                    <ImageBrush ImageSource="Images\deleteDefault.png"/>
                </Setter.Value>
            </Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Name="border" Background="{TemplateBinding Background}" CornerRadius="2" BorderThickness="0">
                            <ContentPresenter Name="content" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                      Margin="{TemplateBinding Padding}"
                                      RecognizesAccessKey="True"
                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background">
                                    <Setter.Value>
                                        <ImageBrush ImageSource="Images\deleteOnHover.png" />
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="BadgeStyle" TargetType="TextBox">
            <Setter Property="Background" Value="Red"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="FontSize" Value="11"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="Margin" Value="10,10,0,13"/>
            <Setter Property="Padding" Value="10,0,0,0"/>
            <Setter Property="Foreground" Value="White" />
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="TextAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Name="border" Background="{TemplateBinding Background}" CornerRadius="8" BorderThickness="0">
                            <ContentPresenter Name="content" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                      Margin="{TemplateBinding Padding}"
                                      RecognizesAccessKey="True"
                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="PasswordBoxWater" TargetType="PasswordBox">
            <Setter Property="Background" Value="{StaticResource TextFieldDefaultColor}"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="FontSize" Value="11"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="Margin" Value="12,10,12,0"/>
            <Setter Property="Padding" Value="10,0,0,0"/>
            <Setter Property="Foreground" Value="#bdbdbd" />
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="VerticalAlignment" Value="Top"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Height" Value="30"/>
            <Setter Property="local:WaterMarkTextHelper.IsMonitoring" Value="True"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type PasswordBox}">
                        <ControlTemplate.Resources>
                            <Storyboard x:Key="enterGotFocus" >
                                <DoubleAnimation Duration="0:0:0.4" To=".2" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Message"/>
                            </Storyboard>
                            <Storyboard x:Key="exitGotFocus" >
                                <DoubleAnimation Duration="0:0:0.4" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Message"/>
                            </Storyboard>
                            <Storyboard x:Key="enterHasText" >
                                <DoubleAnimation Duration="0:0:0.4" From=".2" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Message"/>
                            </Storyboard>
                            <Storyboard x:Key="exitHasText" >
                                <DoubleAnimation Duration="0:0:0.4" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Message"/>
                            </Storyboard>
                        </ControlTemplate.Resources>
                        <Border Name="Bd" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                            <Grid>
                                <ScrollViewer x:Name="PART_ContentHost" VerticalAlignment="Center" Margin="-3,0,0,0" />
                                <TextBlock Text="Password" x:Name="Message" Foreground="#bdbdbd" IsHitTestVisible="False" FontFamily="Calibri" Opacity="0.5" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="10,0,0,0"/>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter TargetName="Bd" Property="Background" Value="{StaticResource TextFieldFocusColor}"/>
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsFocused" Value="True">
                                <Setter TargetName="Bd" Property="Background" Value="{StaticResource TextFieldFocusColor}"/>
                                <Setter TargetName="Bd" Property="BorderThickness" Value="1"/>
                                <Setter TargetName="Bd" Property="BorderBrush" Value="{StaticResource BorderFocusColor}"/>
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="local:WaterMarkTextHelper.HasText" Value="False"/>
                                    <Condition Property="IsFocused" Value="True"/>
                                </MultiTrigger.Conditions>
                                <MultiTrigger.EnterActions>
                                    <BeginStoryboard Storyboard="{StaticResource enterGotFocus}"/>
                                </MultiTrigger.EnterActions>
                                <MultiTrigger.ExitActions>
                                    <BeginStoryboard Storyboard="{StaticResource exitGotFocus}"/>
                                </MultiTrigger.ExitActions>
                            </MultiTrigger>
                            <Trigger Property="local:WaterMarkTextHelper.HasText" Value="True">
                                <Trigger.EnterActions>
                                    <BeginStoryboard Storyboard="{StaticResource enterHasText}"/>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <BeginStoryboard Storyboard="{StaticResource exitHasText}"/>
                                </Trigger.ExitActions>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="PasswordBoxWaterConfirm" TargetType="PasswordBox">
            <Setter Property="Background" Value="{StaticResource TextFieldDefaultColor}"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="FontSize" Value="11"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="Margin" Value="12,10,12,0"/>
            <Setter Property="Padding" Value="10,0,0,0"/>
            <Setter Property="Foreground" Value="#bdbdbd" />
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="VerticalAlignment" Value="Top"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Height" Value="32"/>
            <Setter Property="local:WaterMarkTextHelper.IsMonitoring" Value="True"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type PasswordBox}">
                        <ControlTemplate.Resources>
                            <Storyboard x:Key="enterGotFocus" >
                                <DoubleAnimation Duration="0:0:0.4" To=".2" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Message"/>
                            </Storyboard>
                            <Storyboard x:Key="exitGotFocus" >
                                <DoubleAnimation Duration="0:0:0.4" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Message"/>
                            </Storyboard>
                            <Storyboard x:Key="enterHasText" >
                                <DoubleAnimation Duration="0:0:0.4" From=".2" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Message"/>
                            </Storyboard>
                            <Storyboard x:Key="exitHasText" >
                                <DoubleAnimation Duration="0:0:0.4" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Message"/>
                            </Storyboard>
                        </ControlTemplate.Resources>
                        <Border Name="Bd" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                            <Grid>
                                <ScrollViewer x:Name="PART_ContentHost" VerticalAlignment="Center" Margin="-3,0,0,0" />
                                <TextBlock Text="Confirm Password" x:Name="Message" Foreground="#bdbdbd" IsHitTestVisible="False" FontFamily="Calibri" Opacity="0.5" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="10,0,0,0"/>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter TargetName="Bd" Property="Background" Value="{StaticResource TextFieldFocusColor}"/>
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsFocused" Value="True">
                                <Setter TargetName="Bd" Property="Background" Value="{StaticResource TextFieldFocusColor}"/>
                                <Setter TargetName="Bd" Property="BorderThickness" Value="1"/>
                                <Setter TargetName="Bd" Property="BorderBrush" Value="{StaticResource BorderFocusColor}"/>
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="local:WaterMarkTextHelper.HasText" Value="False"/>
                                    <Condition Property="IsFocused" Value="True"/>
                                </MultiTrigger.Conditions>
                                <MultiTrigger.EnterActions>
                                    <BeginStoryboard Storyboard="{StaticResource enterGotFocus}"/>
                                </MultiTrigger.EnterActions>
                                <MultiTrigger.ExitActions>
                                    <BeginStoryboard Storyboard="{StaticResource exitGotFocus}"/>
                                </MultiTrigger.ExitActions>
                            </MultiTrigger>
                            <Trigger Property="local:WaterMarkTextHelper.HasText" Value="True">
                                <Trigger.EnterActions>
                                    <BeginStoryboard Storyboard="{StaticResource enterHasText}"/>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <BeginStoryboard Storyboard="{StaticResource exitHasText}"/>
                                </Trigger.ExitActions>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="TextBoxWater" TargetType="{x:Type TextBox}">
            <Setter Property="Background" Value="{StaticResource TextFieldDefaultColor}"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="FontSize" Value="11"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="Margin" Value="12,10,12,0"/>
            <Setter Property="Padding" Value="10,0,0,0"/>
            <Setter Property="Foreground" Value="#bdbdbd" />
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="VerticalAlignment" Value="Top"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="TextAlignment" Value="Left"/>
            <Setter Property="Height" Value="32"/>
            <Setter Property="local:WaterMarkTextHelper.IsMonitoring" Value="True"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <ControlTemplate.Resources>
                            <Storyboard x:Key="enterGotFocus" >
                                <DoubleAnimation Duration="0:0:0.4" To=".2" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Message"/>
                            </Storyboard>
                            <Storyboard x:Key="exitGotFocus" >
                                <DoubleAnimation Duration="0:0:0.4" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Message"/>
                            </Storyboard>
                            <Storyboard x:Key="enterHasText" >
                                <DoubleAnimation Duration="0:0:0.4" From=".2" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Message"/>
                            </Storyboard>
                            <Storyboard x:Key="exitHasText" >
                                <DoubleAnimation Duration="0:0:0.4" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Message"/>
                            </Storyboard>
                        </ControlTemplate.Resources>
                        <Border Name="Bd" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                            <Grid>
                                <ScrollViewer x:Name="PART_ContentHost" VerticalAlignment="Center" Margin="-3,0,0,0" />
                                <TextBlock Text="First Name" x:Name="Message" Foreground="#bdbdbd" IsHitTestVisible="False" FontFamily="Calibri" Opacity="0.5" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="10,0,0,0"/>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter TargetName="Bd" Property="Background" Value="{StaticResource TextFieldFocusColor}"/>
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsFocused" Value="True">
                                <Setter TargetName="Bd" Property="Background" Value="{StaticResource TextFieldFocusColor}"/>
                                <Setter TargetName="Bd" Property="BorderThickness" Value="1"/>
                                <Setter TargetName="Bd" Property="BorderBrush" Value="{StaticResource BorderFocusColor}"/>
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="local:WaterMarkTextHelper.HasText" Value="False"/>
                                    <Condition Property="IsFocused" Value="True"/>
                                </MultiTrigger.Conditions>
                                <MultiTrigger.EnterActions>
                                    <BeginStoryboard Storyboard="{StaticResource enterGotFocus}"/>
                                </MultiTrigger.EnterActions>
                                <MultiTrigger.ExitActions>
                                    <BeginStoryboard Storyboard="{StaticResource exitGotFocus}"/>
                                </MultiTrigger.ExitActions>
                            </MultiTrigger>
                            <Trigger Property="local:WaterMarkTextHelper.HasText" Value="True">
                                <Trigger.EnterActions>
                                    <BeginStoryboard Storyboard="{StaticResource enterHasText}"/>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <BeginStoryboard Storyboard="{StaticResource exitHasText}"/>
                                </Trigger.ExitActions>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="TextBoxWaterLastName" TargetType="TextBox" BasedOn="{StaticResource TextBoxWater}">
            <Setter Property="Background" Value="{StaticResource TextFieldDefaultColor}"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="FontSize" Value="11"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="Margin" Value="12,10,12,0"/>
            <Setter Property="Padding" Value="10,0,0,0"/>
            <Setter Property="Foreground" Value="#bdbdbd" />
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="VerticalAlignment" Value="Top"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="TextAlignment" Value="Left"/>
            <Setter Property="Height" Value="30"/>
            <Setter Property="local:WaterMarkTextHelper.IsMonitoring" Value="True"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <ControlTemplate.Resources>
                            <Storyboard x:Key="enterGotFocus" >
                                <DoubleAnimation Duration="0:0:0.4" To=".2" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Message"/>
                            </Storyboard>
                            <Storyboard x:Key="exitGotFocus" >
                                <DoubleAnimation Duration="0:0:0.4" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Message"/>
                            </Storyboard>
                            <Storyboard x:Key="enterHasText" >
                                <DoubleAnimation Duration="0:0:0.4" From=".2" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Message"/>
                            </Storyboard>
                            <Storyboard x:Key="exitHasText" >
                                <DoubleAnimation Duration="0:0:0.4" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Message"/>
                            </Storyboard>
                        </ControlTemplate.Resources>
                        <Border Name="Bd" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                            <Grid>
                                <ScrollViewer x:Name="PART_ContentHost" VerticalAlignment="Center" Margin="-3,0,0,0" />
                                <TextBlock Text="Last Name" x:Name="Message" Foreground="#bdbdbd" IsHitTestVisible="False" FontFamily="Calibri" Opacity="0.5" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="10,0,0,0"/>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter TargetName="Bd" Property="Background" Value="{StaticResource TextFieldFocusColor}"/>
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsFocused" Value="True">
                                <Setter TargetName="Bd" Property="Background" Value="{StaticResource TextFieldFocusColor}"/>
                                <Setter TargetName="Bd" Property="BorderThickness" Value="1"/>
                                <Setter TargetName="Bd" Property="BorderBrush" Value="{StaticResource BorderFocusColor}"/>
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="local:WaterMarkTextHelper.HasText" Value="False"/>
                                    <Condition Property="IsFocused" Value="True"/>
                                </MultiTrigger.Conditions>
                                <MultiTrigger.EnterActions>
                                    <BeginStoryboard Storyboard="{StaticResource enterGotFocus}"/>
                                </MultiTrigger.EnterActions>
                                <MultiTrigger.ExitActions>
                                    <BeginStoryboard Storyboard="{StaticResource exitGotFocus}"/>
                                </MultiTrigger.ExitActions>
                            </MultiTrigger>
                            <Trigger Property="local:WaterMarkTextHelper.HasText" Value="True">
                                <Trigger.EnterActions>
                                    <BeginStoryboard Storyboard="{StaticResource enterHasText}"/>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <BeginStoryboard Storyboard="{StaticResource exitHasText}"/>
                                </Trigger.ExitActions>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="TextBoxWaterEmail" TargetType="{x:Type TextBox}" BasedOn="{StaticResource TextBoxWater}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <ControlTemplate.Resources>
                            <Storyboard x:Key="enterGotFocus" >
                                <DoubleAnimation Duration="0:0:0.4" To=".2" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Message"/>
                            </Storyboard>
                            <Storyboard x:Key="exitGotFocus" >
                                <DoubleAnimation Duration="0:0:0.4" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Message"/>
                            </Storyboard>
                            <Storyboard x:Key="enterHasText" >
                                <DoubleAnimation Duration="0:0:0.4" From=".2" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Message"/>
                            </Storyboard>
                            <Storyboard x:Key="exitHasText" >
                                <DoubleAnimation Duration="0:0:0.4" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Message"/>
                            </Storyboard>
                        </ControlTemplate.Resources>
                        <Border Name="Bd" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                            <Grid>
                                <ScrollViewer x:Name="PART_ContentHost" VerticalAlignment="Center" Margin="-3,0,0,0" />
                                <TextBlock Text="Email" x:Name="Message" Foreground="#bdbdbd" IsHitTestVisible="False" FontFamily="Calibri" Opacity="0.5" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="10,0,0,0"/>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter TargetName="Bd" Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsFocused" Value="True">
                                <Setter TargetName="Bd" Property="Background" Value="{StaticResource TextFieldFocusColor}"/>
                                <Setter TargetName="Bd" Property="BorderThickness" Value="1"/>
                                <Setter TargetName="Bd" Property="BorderBrush" Value="{StaticResource BorderFocusColor}"/>
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="local:WaterMarkTextHelper.HasText" Value="False"/>
                                    <Condition Property="IsFocused" Value="True"/>
                                </MultiTrigger.Conditions>
                                <MultiTrigger.EnterActions>
                                    <BeginStoryboard Storyboard="{StaticResource enterGotFocus}"/>
                                </MultiTrigger.EnterActions>
                                <MultiTrigger.ExitActions>
                                    <BeginStoryboard Storyboard="{StaticResource exitGotFocus}"/>
                                </MultiTrigger.ExitActions>
                            </MultiTrigger>
                            <Trigger Property="local:WaterMarkTextHelper.HasText" Value="True">
                                <Trigger.EnterActions>
                                    <BeginStoryboard Storyboard="{StaticResource enterHasText}"/>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <BeginStoryboard Storyboard="{StaticResource exitHasText}"/>
                                </Trigger.ExitActions>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="TextBoxWaterConfirmEmail" TargetType="{x:Type TextBox}" BasedOn="{StaticResource TextBoxWater}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <ControlTemplate.Resources>
                            <Storyboard x:Key="enterGotFocus" >
                                <DoubleAnimation Duration="0:0:0.4" To=".2" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Message"/>
                            </Storyboard>
                            <Storyboard x:Key="exitGotFocus" >
                                <DoubleAnimation Duration="0:0:0.4" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Message"/>
                            </Storyboard>
                            <Storyboard x:Key="enterHasText" >
                                <DoubleAnimation Duration="0:0:0.4" From=".2" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Message"/>
                            </Storyboard>
                            <Storyboard x:Key="exitHasText" >
                                <DoubleAnimation Duration="0:0:0.4" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Message"/>
                            </Storyboard>
                        </ControlTemplate.Resources>
                        <Border Name="Bd" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                            <Grid>
                                <ScrollViewer x:Name="PART_ContentHost" VerticalAlignment="Center" Margin="-3,0,0,0" />
                                <TextBlock Text="Email Confirm" x:Name="Message" Foreground="#bdbdbd" IsHitTestVisible="False" FontFamily="Calibri" Opacity="0.5" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="10,0,0,0"/>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter TargetName="Bd" Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsFocused" Value="True">
                                <Setter TargetName="Bd" Property="Background" Value="{StaticResource TextFieldFocusColor}"/>
                                <Setter TargetName="Bd" Property="BorderThickness" Value="1"/>
                                <Setter TargetName="Bd" Property="BorderBrush" Value="{StaticResource BorderFocusColor}"/>
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="local:WaterMarkTextHelper.HasText" Value="False"/>
                                    <Condition Property="IsFocused" Value="True"/>
                                </MultiTrigger.Conditions>
                                <MultiTrigger.EnterActions>
                                    <BeginStoryboard Storyboard="{StaticResource enterGotFocus}"/>
                                </MultiTrigger.EnterActions>
                                <MultiTrigger.ExitActions>
                                    <BeginStoryboard Storyboard="{StaticResource exitGotFocus}"/>
                                </MultiTrigger.ExitActions>
                            </MultiTrigger>
                            <Trigger Property="local:WaterMarkTextHelper.HasText" Value="True">
                                <Trigger.EnterActions>
                                    <BeginStoryboard Storyboard="{StaticResource enterHasText}"/>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <BeginStoryboard Storyboard="{StaticResource exitHasText}"/>
                                </Trigger.ExitActions>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="TextBoxWaterCompany" TargetType="{x:Type TextBox}" BasedOn="{StaticResource TextBoxWater}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <ControlTemplate.Resources>
                            <Storyboard x:Key="enterGotFocus" >
                                <DoubleAnimation Duration="0:0:0.4" To=".2" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Message"/>
                            </Storyboard>
                            <Storyboard x:Key="exitGotFocus" >
                                <DoubleAnimation Duration="0:0:0.4" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Message"/>
                            </Storyboard>
                            <Storyboard x:Key="enterHasText" >
                                <DoubleAnimation Duration="0:0:0.4" From=".2" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Message"/>
                            </Storyboard>
                            <Storyboard x:Key="exitHasText" >
                                <DoubleAnimation Duration="0:0:0.4" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Message"/>
                            </Storyboard>
                        </ControlTemplate.Resources>
                        <Border Name="Bd" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                            <Grid>
                                <ScrollViewer x:Name="PART_ContentHost" VerticalAlignment="Center" Margin="-3,0,0,0" />
                                <TextBlock Text="Company ( Optional )" x:Name="Message" Foreground="#bdbdbd" IsHitTestVisible="False" FontFamily="Calibri" Opacity="0.5" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="10,0,0,0"/>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter TargetName="Bd" Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsFocused" Value="True">
                                <Setter TargetName="Bd" Property="Background" Value="{StaticResource TextFieldFocusColor}"/>
                                <Setter TargetName="Bd" Property="BorderThickness" Value="1"/>
                                <Setter TargetName="Bd" Property="BorderBrush" Value="{StaticResource BorderFocusColor}"/>
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="local:WaterMarkTextHelper.HasText" Value="False"/>
                                    <Condition Property="IsFocused" Value="True"/>
                                </MultiTrigger.Conditions>
                                <MultiTrigger.EnterActions>
                                    <BeginStoryboard Storyboard="{StaticResource enterGotFocus}"/>
                                </MultiTrigger.EnterActions>
                                <MultiTrigger.ExitActions>
                                    <BeginStoryboard Storyboard="{StaticResource exitGotFocus}"/>
                                </MultiTrigger.ExitActions>
                            </MultiTrigger>
                            <Trigger Property="local:WaterMarkTextHelper.HasText" Value="True">
                                <Trigger.EnterActions>
                                    <BeginStoryboard Storyboard="{StaticResource enterHasText}"/>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <BeginStoryboard Storyboard="{StaticResource exitHasText}"/>
                                </Trigger.ExitActions>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    <Grid Name="ContentGrid" Margin="0,0,0,0" >
        <Grid Name="MainViewGrid">
                <Grid.ColumnDefinitions>
                <ColumnDefinition Width="{StaticResource LeftColumnWidth}"/>
                <ColumnDefinition Width="{StaticResource RightColumnWidth}"/>
                </Grid.ColumnDefinitions>
            <Rectangle Name="LeftPanel" Fill="{StaticResource LeftPanelColor}" Opacity="0.98" HorizontalAlignment="Left" Width="{StaticResource LeftPanelWidth}" Margin="0,0,0,0" Grid.Column="0">
            </Rectangle>
            <Rectangle Name="RightPanel" Fill="{StaticResource RightPanelColor}" HorizontalAlignment="Left" Width="{StaticResource RightPanelWidth}" Margin="0" Grid.Column="1"/>
            <Grid Name="TopMenuGrid" Height="30" VerticalAlignment="Top">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="100"/>
                    <ColumnDefinition Width="100"/>
                    <ColumnDefinition Width="100"/>
                    <ColumnDefinition Width="100"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Button Name="MyAppsButton" Grid.Column="0" Style="{StaticResource MyAppsButton}" Height="16" Width="66" />
                <Button Name="SyncButton" Click="SyncButtonOnClick" Grid.Column="1" Style="{StaticResource CloudSyncButton}" Height="12" Width="81" Visibility="{Binding CloudSyncVisibility}"/>
                <Button Name="AlertsButton" Grid.Column="2" Style="{StaticResource AlertsButton}" Height="14" Width="52"/>
                <Button Name="UpdateAvailableButton" Click="UpdateButtonOnClick" Grid.Column="3" Style="{StaticResource BorderlessButton}" Width="100" VerticalAlignment="Top" HorizontalAlignment="Left"  Visibility="Hidden" Margin="120,6,0,0" Content="Update Available!" />
                <Button Name="LogoutButton" Click="Logout_Click" Grid.Column="1" Style="{StaticResource BorderlessButton}" Width="100" VerticalAlignment="Top" HorizontalAlignment="Right"  Visibility="{Binding LogOutVisibility}" Margin="120,6,0,0" Content="Log Out"/>
                <Line Grid.ColumnSpan="5" X1="5" Y1="30" X2="425" Y2="30" Stroke="#656565" StrokeThickness="1" />
                <Line Grid.Column="0" X1="5" Y1="30" X2="425" Y2="30" Stroke="{StaticResource DefaultTextColor}" StrokeThickness="1" />
            </Grid>
            <TabControl Grid.ColumnSpan="2" Margin="0,30,0,0" Background="Transparent" HorizontalAlignment="Left" BorderThickness="0" TabStripPlacement="Top" Width="{StaticResource WindowWidth}">
            <TabItem Style ="{DynamicResource LeftMenu}"  Name="YourAppsTab" Background="Transparent" Width="Auto">
                    
                <Grid Name="YourApps" Margin="30,30,0,0" Height="235" Width="390" VerticalAlignment="Top" HorizontalAlignment="Left">

                            <Button Style="{StaticResource AppButton}"  Click="AppButtonClick">
                                <Grid>
                                
                                <Grid Width="165" Height="45">
                                        <Border Name="Mask"
                        BorderBrush="{StaticResource DefaultTextColor}"
                        BorderThickness="22.5"
                        CornerRadius=".5">
                                        </Border>
                                    <Grid>
                                        <Grid.OpacityMask>
                                                <VisualBrush Visual="{Binding ElementName=Mask}" />
                                            </Grid.OpacityMask>
                                            <Image Grid.Column="0" VerticalAlignment="Top" HorizontalAlignment="Left" Width="37" Height="37" Source="Icons\Google.png" />
                                            <TextBlock FontSize="14" Style="{StaticResource TextStyle}" Grid.Column="1" TextTrimming="CharacterEllipsis" Foreground="White" Padding="8,4,0,0" VerticalAlignment="Top" Text="{Binding Name}"></TextBlock>

                                        </Grid>
                                    </Grid>
                                    <!--<StackPanel Orientation="Horizontal" HorizontalAlignment="Left" Width="165">
                           </StackPanel>-->
                                </Grid>
                        </Button>
                        <!--<ListBox BorderThickness="0" Background="Transparent"; ScrollViewer.HorizontalScrollBarVisibility="Disabled" Name="MyAppsListBox" ItemsSource="{Binding MyApplications}" Grid.ColumnSpan="2">
                            <ListBox.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <WrapPanel IsItemsHost="True"/>
                                </ItemsPanelTemplate>
                            </ListBox.ItemsPanel>
                            <ListBox.ItemTemplate>
                                <DataTemplate>
                                    <Button Style="{StaticResource AppButton}"  Click="AppButtonClick">
                                        <Grid Style="{StaticResource YourAppsButtonGrid}">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="44"/>
                                                <ColumnDefinition Width="Auto"/>
                                            </Grid.ColumnDefinitions>
                                            <Image Grid.Column="0" VerticalAlignment="Top" HorizontalAlignment="Left" Width="37" Height="37" Source="{Binding LocalImagePath}" />
                                            <TextBlock FontSize="14" Style="{StaticResource TextStyle}" Grid.Column="1" TextTrimming="CharacterEllipsis" Foreground="White" Padding="8,4,0,0" VerticalAlignment="Top" Text="{Binding Name}"></TextBlock>
                                        </Grid>
                                    </Button>
                                </DataTemplate>
                            </ListBox.ItemTemplate>
                            <ListBox.Resources>
                                <Style TargetType="ListBoxItem">
                                    <Setter Property="Focusable" Value="False"></Setter>
                                    <Setter Property="Margin" Value="4,0,0,0"></Setter>
                                </Style>
                            </ListBox.Resources>
                        </ListBox>-->
                        <StackPanel Name="ErrorLoadingYourApps" Margin="0,240,0,0" Orientation="Horizontal" Grid.ColumnSpan="2" >
                            <TextBlock Text="{Binding MyAppsLoadError}"  HorizontalAlignment="Left" Margin="0,0,0,0" VerticalAlignment="Top" Width="345" Height="20" Foreground="White"/>
                        </StackPanel>
                    </Grid>
                </TabItem>
            </TabControl>
            <Grid Grid.Column="1" Margin="30,0,0,0">
                <TextBlock Name="SuggestedAppsLabel" Style="{StaticResource TextStyle}" FontSize="12" Padding="0" Grid.Column="1" Foreground="White" Text="Available Apps" HorizontalAlignment="Left" Margin="0,30,0,0" VerticalAlignment="Top" />
                <ListBox Height="230" BorderThickness="0" Background="Transparent" ScrollViewer.HorizontalScrollBarVisibility="Disabled" Margin="0,60,30,70" Name="SuggestedListBox" ItemsSource="{Binding SuggestedApplications}">
                    <ListBox.Resources >
                        <Style TargetType="ListBoxItem">
                            <Setter Property="Focusable" Value="False"></Setter>
                        </Style>
                    </ListBox.Resources>
                    <ListBox.ItemTemplate>
                        <DataTemplate>
                            <Button Style="{StaticResource InstallAppButton}" Height="32"  Margin="0,0,0,10" Click="InstallAppClick">
                                <StackPanel Orientation="Horizontal" HorizontalAlignment="Left" VerticalAlignment="Top" Width="140">
                                    <Border BorderBrush="Gray" BorderThickness="3" CornerRadius="3" Width="30" Height="30" >
                                        <Image HorizontalAlignment="Left" Width="24" Height="24" Source="{Binding LocalImagePath}" />
                                    </Border>
                                    <StackPanel Margin="15,3,0,0">
                                        <TextBlock TextTrimming="CharacterEllipsis" FontSize="9" Margin="0,0,0,2" VerticalAlignment="Top" Text="{Binding Name}"></TextBlock>
                                        <TextBlock TextTrimming="CharacterEllipsis" FontSize="8" Margin="0,0,0,2" VerticalAlignment="Top" Text="{Binding Name}"></TextBlock>
                                    </StackPanel>
                                </StackPanel>
                            </Button>
                        </DataTemplate>
                    </ListBox.ItemTemplate>
                </ListBox>
                <Button Style="{StaticResource BorderlessButton}" HorizontalContentAlignment="Left" VerticalContentAlignment="Center" HorizontalAlignment="Left" BorderBrush="Transparent" Height="28" Margin="0,20,0,10" Click="GoToAppStore" Width="120" VerticalAlignment="Bottom">
                        <StackPanel HorizontalAlignment="Left" Orientation="Horizontal" VerticalAlignment="Top">
                            <Image HorizontalAlignment="Left" Width="11" Height="11" Source="Images/LaunchAppStore.png" />
                        <TextBlock Style="{StaticResource TextStyle}" FontSize="12" Width="80" Margin="6" VerticalAlignment="Center" Text="Browse Apps"></TextBlock>
                        </StackPanel>
                </Button>
            </Grid>
            <TextBlock Text="{Binding SuggestedAppsLoadError}"  HorizontalAlignment="Left" Margin="75,300,0,0" VerticalAlignment="Top" Width="368" Height="20" Foreground="White" Grid.ColumnSpan="2"/>
            <Label Name="Version" Content="{Binding VersionString }" Margin="10,0,0,10" VerticalAlignment="Bottom" Height="30" HorizontalAlignment="Left"/>
        </Grid>
        <Grid Name="LoginViewGrid" Visibility="Hidden" Height="{StaticResource WindowHeight}" Width="{StaticResource WindowWidth}" VerticalAlignment="Top" HorizontalAlignment="Left" Margin="0,0,0,0" Background="{StaticResource LoginPanelColor}">
            <Grid Height="50" VerticalAlignment="Top">
                <Button HorizontalContentAlignment="Right" Click="CancelLoginClick" HorizontalAlignment="Right"
                                Style="{StaticResource CloseLoginButton}" Width="16"
                                Height="16" VerticalAlignment="Top" Margin="0,8,8,0" >
                </Button>
                <TextBlock Name="LoginLabel" Style="{StaticResource TextStyleBold}" FontSize="13" Height="20" Width="280"  Margin="0,24,0,0" VerticalAlignment="Top" Text="{Binding LoginHeaderText}" HorizontalAlignment="Center" TextAlignment="Center"/>
            </Grid>
            <Grid Margin="0,100,18,0" >
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="340"/>
                    <ColumnDefinition Width="340"/>
                </Grid.ColumnDefinitions>
                <Grid Grid.Column="0" Margin="180,0,18,0">
                    <TextBlock Name="NewCustomerLabel" Style="{StaticResource TextStyleBold}" FontSize="11" Foreground="White" Text="New Customer"/>
                    <Button Name="RegisterButton" FontSize="9" Content="Register" Style="{DynamicResource MainButtonStyle}" Margin="0,40"
                                                HorizontalAlignment="Left" VerticalAlignment="Top" Width="140"
                                                Height="32" Click="RegisterClick" />
                </Grid>
                <Line Grid.Column="1" X1="0" Y1="-3" X2="0" Y2="168" Stroke="{StaticResource MiddleBarColor}" StrokeThickness=".5" />
                <Grid Grid.Column="1" Margin="20,0,32,0" Width="180" HorizontalAlignment="Left">
                    <TextBlock Name="ReturningCustomerLabel" Style="{StaticResource TextStyleBold}" FontSize="11" Foreground="White" Text="Existing Customer"/>
                    <TextBlock x:Name="LoginFailedMessage" Style="{StaticResource TextStyle}" Margin="0,16,0,0" HorizontalAlignment="Left" Foreground="{StaticResource ErrorTextColor}" FontSize="8" Text="{Binding LoginFailedMessage}" Visibility="Hidden"/>
                    <TextBox Name="UsernameTextBox" Style="{DynamicResource TextBoxWater}"
                                                HorizontalAlignment="Stretch" Width="Auto" Margin="0,40,0,0" IsKeyboardFocusedChanged="LoginInfo_OnChange"/>
                    <TextBlock x:Name="EmailFormatErrorMessage" Style="{StaticResource TextStyle}" Margin="0,76,0,0" HorizontalAlignment="Left" Foreground="{StaticResource ErrorTextColor}" FontSize="8" Text="Please enter a valid email address" Visibility="Hidden"  />
                    <PasswordBox Name="PasswordBox" Style="{DynamicResource PasswordBoxWater}"
                                                    HorizontalAlignment="Stretch" Width="Auto" Margin="0,90,0,0" KeyDown="PasswordBox_OnKeyDown" IsKeyboardFocusedChanged="LoginInfo_OnChange">
                    </PasswordBox>
                    <TextBlock Margin="0,155,0,0" VerticalAlignment="Top" HorizontalAlignment="Left" TextAlignment="Center" Text="Recover Password" TextDecorations="Underline" MouseLeftButtonDown="ForgotPassword" FontSize="9" Style="{StaticResource TextStyle}" Width="90" Height="20"/>
                    <Button Name="LoginButton" Margin="0,150,0,0" Content="Log In" Style="{DynamicResource LoginButtonDefault}" HorizontalAlignment="Right" VerticalAlignment="Top" Width="84"
                                            Height="24" Click="Login" FontSize="9"/>
                </Grid>
            </Grid>
            <TextBlock TextWrapping="Wrap" Name="MessageArea" TextAlignment="Center" Margin="5,30,5,10" Style="{StaticResource TextStyle}"/>
        </Grid>
        <Grid Name="RegistrationViewGrid" Visibility="Hidden" Height="{StaticResource WindowHeight}" Width="{StaticResource WindowWidth}" VerticalAlignment="Top" HorizontalAlignment="Left" Margin="0,0,0,0" Background="{StaticResource LoginPanelColor}">
            <Grid Margin="0,70,18,0" >
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="200"/>
                    <ColumnDefinition Width="{StaticResource LeftColumnWidth}"/>
                </Grid.ColumnDefinitions>
                <Grid Grid.Column="0" Margin="80,0,18,0">
                    <TextBlock Name="RegistrationLabel" Style="{StaticResource TextStyleBold}" FontSize="13" Foreground="White" Text="Registration"/>
                    <!--<TextBox  Name="NewCustomerEmail" Style="{DynamicResource TextBoxWaterEmail}"
                                                HorizontalAlignment="Stretch" Margin="0,11,0,0" Width="Auto" KeyUp="NewCustomerEmail_OnKeyUp">
                                    
                                    </TextBox>-->
                </Grid>
                <UniformGrid Grid.Column="1" Columns="2" Rows="4" Margin="0,-10,0,80">
                    <TextBox Name="FirstNameTextBox" Style="{StaticResource TextBoxWater}"
                                                HorizontalAlignment="Stretch" Width="Auto" IsKeyboardFocusedChanged="LoginInfo_OnChange"/>
                    <TextBox Name="LastNameTextBox" Style="{StaticResource TextBoxWaterLastName}"
                                                HorizontalAlignment="Stretch" Width="Auto" IsKeyboardFocusedChanged="LoginInfo_OnChange"/>
                    <TextBox Name="NewCustomerEmail" Style="{StaticResource TextBoxWaterEmail}"  HorizontalAlignment="Stretch" Width="Auto" IsKeyboardFocusedChanged="LoginInfo_OnChange"/>
                    <TextBox Name="ConfirmEmailTextBox" Style="{StaticResource TextBoxWaterConfirmEmail}"  HorizontalAlignment="Stretch" Width="Auto" IsKeyboardFocusedChanged="LoginInfo_OnChange"/>
                    <PasswordBox Name="RegisterPasswordBox" Style="{StaticResource PasswordBoxWater}"
                                                    HorizontalAlignment="Stretch" Width="Auto" KeyDown="PasswordBox_OnKeyDown" IsKeyboardFocusedChanged="LoginInfo_OnChange">
                    </PasswordBox>
                    <PasswordBox Name="ConfirmRegisterPasswordBox" Style="{DynamicResource PasswordBoxWaterConfirm}"
                                                    HorizontalAlignment="Stretch" Width="Auto"  KeyDown="PasswordBox_OnKeyDown" IsKeyboardFocusedChanged="LoginInfo_OnChange">
                    </PasswordBox>
                    <TextBox Name="CompanyTextBox" Style="{StaticResource TextBoxWaterCompany}"  HorizontalAlignment="Stretch" Width="Auto" IsKeyboardFocusedChanged="LoginInfo_OnChange"/>
                </UniformGrid>

                <!--<StackPanel Orientation="Vertical" Grid.Column="1" Margin="50,0,5,0"  >
                       </StackPanel>
                    <StackPanel Orientation="Vertical" Grid.Column="2" Margin="0,0,50,0">
                        <TextBox Name="LastNameTextBox" Style="{DynamicResource TextBoxWater}"
                                                HorizontalAlignment="Stretch" Width="Auto" Margin="0,40,0,0" IsKeyboardFocusedChanged="LoginInfo_OnChange"/>
                        <TextBox Name="ConfirmEmailTextBox" Style="{DynamicResource TextBoxWater}"  HorizontalAlignment="Stretch" Width="Auto" Margin="0,40,0,0" IsKeyboardFocusedChanged="LoginInfo_OnChange"/>
                        <PasswordBox Name="ConfirmRegisterPasswordBox" Style="{DynamicResource PasswordBoxWater}"
                                                    HorizontalAlignment="Stretch" Width="Auto" Margin="0,90,0,0" KeyDown="PasswordBox_OnKeyDown" IsKeyboardFocusedChanged="LoginInfo_OnChange">
                        </PasswordBox>
                        <TextBlock Margin="0,155,0,0" VerticalAlignment="Top" HorizontalAlignment="Left" TextAlignment="Center" Text="Recover Password" TextDecorations="Underline" MouseLeftButtonDown="ForgotPassword" FontSize="9" Style="{StaticResource TextStyle}" Width="90" Height="20"/>
                        <TextBlock Margin="0,155,0,0" VerticalAlignment="Top" HorizontalAlignment="Left" TextAlignment="Center" Text="Recover Password" TextDecorations="Underline" MouseLeftButtonDown="ForgotPassword" FontSize="9" Style="{StaticResource TextStyle}" Width="90" Height="20"/>
                        <Button Name="RegisterViewButton" FontSize="9" Content="Register" Style="{DynamicResource MainButtonStyle}" Margin="0,40"
                                                HorizontalAlignment="Left" VerticalAlignment="Top" Width="140"
                                                Height="32" Click="RegisterClick" />
                    </StackPanel>-->
            </Grid>
            <TextBlock TextWrapping="Wrap" Name="RvMessageArea" TextAlignment="Center" Margin="5,30,5,10" Style="{StaticResource TextStyle}"/>
        </Grid>
    </Grid>
</Window>