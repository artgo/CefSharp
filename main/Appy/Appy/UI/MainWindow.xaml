<Window x:Class="AppDirect.WindowsClient.UI.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:controls="clr-namespace:AppDirect.WindowsClient.UI"
        Title="MyApps" Height="{StaticResource WindowHeight}" Width="{StaticResource WindowWidth}"
        WindowStartupLocation="Manual"
        Background="Black"
        WindowStyle="None"
        AllowsTransparency="True"
        Closing="MainWindow_OnClosing"
        ShowInTaskbar="False" >
    <Window.Resources>
        <Style TargetType="ProgressBar" x:Key="SpinnerProgress">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ProgressBar">
                        <Grid>
                            <ProgressBar x:Name="pgBar" Value="{TemplateBinding Value}" Visibility="Collapsed" IsIndeterminate="{TemplateBinding IsIndeterminate}" Background="{StaticResource MenuItemColor}"/>
                            <TextBox Background="Red" Text="{Binding ElementName=pgBar, Path=Value}">
                                <TextBox.Style>
                                    <Style TargetType="{x:Type TextBox}">
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="TextBox">
                                                    <Grid >
                                                        <Grid Width="50" Height="50" x:Name="mainGrid">
                                                            <Grid.RenderTransform>
                                                                <RotateTransform Angle="0" CenterX="25" CenterY="25" />
                                                            </Grid.RenderTransform>
                                                            <Grid.Triggers>
                                                                <EventTrigger RoutedEvent="Grid.Loaded">
                                                                    <BeginStoryboard>
                                                                        <Storyboard RepeatBehavior="Forever">
                                                                            <DoubleAnimation From="0" To="360" Duration="00:00:00.750" Storyboard.TargetName="mainGrid" Storyboard.TargetProperty="(Grid.RenderTransform).(RotateTransform.Angle)" />
                                                                        </Storyboard>
                                                                    </BeginStoryboard>
                                                                </EventTrigger>
                                                            </Grid.Triggers>
                                                            <Border x:Name="spinnerMask" BorderThickness="6" CornerRadius="25" BorderBrush="White"/>
                                                            <Rectangle>
                                                                <Rectangle.OpacityMask>
                                                                    <VisualBrush Visual="{Binding ElementName=spinnerMask}"/>
                                                                </Rectangle.OpacityMask>
                                                                <Rectangle.Fill>
                                                                    <LinearGradientBrush EndPoint="1,0.5" StartPoint="0,0.5">
                                                                        <GradientStop Color="#dfdfdf" Offset="0" />
                                                                        <GradientStop Color="#bdbdbd" Offset="0.198" />
                                                                        <GradientStop Color="#9f9f9f" Offset="0.4" />
                                                                        <GradientStop Color="#9f9f9f" Offset="0.6" />
                                                                        <GradientStop Color="#bdbdbd" Offset="0.891" />
                                                                        <GradientStop Color="#dfdfdf" Offset="1" />
                                                                    </LinearGradientBrush>
                                                                </Rectangle.Fill>
                                                            </Rectangle>
                                                            <Rectangle Fill="#dfdfdf">
                                                                <Rectangle.OpacityMask>
                                                                    <VisualBrush Visual="{Binding ElementName=spinnerMask}"/>
                                                                </Rectangle.OpacityMask>
                                                                <Rectangle.Clip>
                                                                    <RectangleGeometry Rect="0,0,50,25"/>
                                                                </Rectangle.Clip>
                                                            </Rectangle>
                                                        </Grid>
                                                    </Grid>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </TextBox.Style>
                            </TextBox>
                            <Grid.RenderTransform>
                                <ScaleTransform ScaleX="0.4" ScaleY="0.4"/>
                            </Grid.RenderTransform>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="MenuItemSeparator" TargetType="Separator">
            <Setter Property="Margin" Value="0,-1,0,-1" />
            <Setter Property="BorderBrush" Value="{StaticResource SeparatorColor}" />
            <Setter Property="BorderThickness" Value="2" />
            <Setter Property="Background" Value="{StaticResource SeparatorColor}" />
            <Setter Property="HorizontalAlignment" Value="Right" />
            <Setter Property="LayoutTransform">
                <Setter.Value>
                    <RotateTransform Angle="90" />
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="MenuItem" TargetType="MenuItem">
            <Setter Property="Foreground" Value="{StaticResource DefaultTextColor}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="MenuItem">
                        <Border>
                            <Grid Background="{StaticResource MenuItemColor}" Name="MenuItemGrid">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="25" />
                                    <ColumnDefinition Width="Auto" SharedSizeGroup="Header" />
                                </Grid.ColumnDefinitions>
                                <Border Grid.Column="0"
                                        Name="Check"
                                        Width="18" Height="18"
                                        Visibility="Collapsed"
                                        Margin="2,0,2,0"
                                        VerticalAlignment="Bottom"
                                        Background="Transparent"
                                        BorderThickness="1"
                                        BorderBrush="Transparent">
                                    <Path
                                        Name="CheckMark"
                                        Width="14" Height="14"
                                        VerticalAlignment="Bottom"
                                        Visibility="Hidden"
                                        SnapsToDevicePixels="False"
                                        Stroke="{StaticResource DefaultTextColor}"
                                        StrokeThickness="2"
                                        Data="M0,4 L4,7 L10,0" />
                                </Border>
                                <Separator Style="{StaticResource MenuItemSeparator}" />
                                <ContentPresenter Name="HeaderHost" Grid.Column="1" Margin="4,2,6,2"
                                                  ContentSource="Header" RecognizesAccessKey="True" />
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="true">
                                <Setter TargetName="CheckMark" Property="Visibility" Value="Visible" />
                            </Trigger>
                            <Trigger Property="IsCheckable" Value="true">
                                <Setter TargetName="Check" Property="Visibility" Value="Visible" />
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true ">
                                <Setter Property="Background" TargetName="MenuItemGrid"
                                        Value="{StaticResource MenuItemHoverColor}" />
                                <Setter Property="Foreground" Value="{StaticResource DefaultTextColor}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="SubMenuItem" TargetType="MenuItem">
            <Setter Property="Foreground" Value="{StaticResource DefaultTextColor}" />
            <Setter Property="Background" Value="{StaticResource MenuItemColor}" />
            <Setter Property="Margin" Value="0,1,0,1" />
            <Setter Property="Height" Value="25" />
            <Setter Property="StaysOpenOnClick" Value="True"></Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="MenuItem">
                        <Border Background="Transparent">
                            <Grid Name="MenuItemGrid" Height="25">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="25" />
                                    <ColumnDefinition Width="130" SharedSizeGroup="Header" />
                                </Grid.ColumnDefinitions>
                                <ContentPresenter Name="IconHost" Grid.Column="0" ContentSource="Icon"
                                                  RecognizesAccessKey="True" />
                                <Separator Style="{StaticResource MenuItemSeparator}" />
                                <ContentPresenter Name="HeaderHost" Grid.Column="1" Margin="4,0,6,0"
                                                  ContentSource="Header" RecognizesAccessKey="True"
                                                  VerticalAlignment="Center" />
                                </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true ">
                                <Setter Property="Background" TargetName="MenuItemGrid"
                                        Value="{StaticResource MenuItemHoverColor}" />
                                <Setter Property="Foreground" Value="{StaticResource DefaultTextColor}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="TopLevelMenuItem" TargetType="MenuItem">
            <Setter Property="Foreground" Value="{StaticResource DefaultTextColor}" />
            <Setter Property="Margin" Value="0" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="MenuItem">
                        <Border Name="Border">
                            <Grid>
                                <ContentPresenter Name="Content"
                                    Margin="6,3,6,3"
                                    RecognizesAccessKey="True" >
                                    <ContentPresenter.Content>
                                        <Image Name="Icon" Source="Images/cogGrey.png" Width="16"></Image>
                                    </ContentPresenter.Content>
                                </ContentPresenter>
                                <Popup
                                    Name="Popup"
                                    Placement="Left"
                                    IsOpen="{TemplateBinding IsSubmenuOpen}"
                                    AllowsTransparency="True"
                                    Focusable="False"
                                    PopupAnimation="Fade" VerticalOffset="20" HorizontalOffset="35">
                                    <Border Name="SubmenuBorder" SnapsToDevicePixels="True"
                                            Background="{StaticResource MenuItemColor}"
                                            BorderBrush="Transparent"
                                            BorderThickness="5">
                                        <Border.Effect>
                                            <DropShadowEffect Color="Black" BlurRadius="5" ></DropShadowEffect>
                                        </Border.Effect>
                                        <StackPanel Margin="0,3,0,3" IsItemsHost="True"
                                                    KeyboardNavigation.DirectionalNavigation="Cycle" />
                                    </Border>
                                </Popup>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsSuspendingPopupAnimation" Value="true">
                                <Setter TargetName="Popup" Property="PopupAnimation" Value="None" />
                            </Trigger>
                            <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="True">
                                <Setter TargetName="SubmenuBorder" Property="CornerRadius" Value="0,0,0,0" />
                                <Setter TargetName="SubmenuBorder" Property="Padding" Value="0,0,0,0" />
                            </Trigger>
                            <Trigger SourceName="Content" Property="IsMouseOver" Value="True">
                                <Setter TargetName="Icon" Property="Source" Value="Images/cogWhite.png " />
                            </Trigger>
                            <Trigger Property="IsSubmenuOpen" Value="True">
                                <Setter TargetName="Icon" Property="Source" Value="Images/cogWhite.png " />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ContextMenuStyle" TargetType="ContextMenu">
            <Setter Property="SnapsToDevicePixels" Value="True" />
            <Setter Property="OverridesDefaultStyle" Value="True" />
            <Setter Property="Grid.IsSharedSizeScope" Value="true" />
            <Setter Property="HasDropShadow" Value="True" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ContextMenu">
                        <Border
                            Name="Border"
                            BorderBrush="Transparent"
                            BorderThickness="5">
                            <Border.Effect>
                                <DropShadowEffect Color="Black" BlurRadius="5" ></DropShadowEffect>
                            </Border.Effect>
                            <StackPanel IsItemsHost="True"
                                        Margin="0,3,0,3"
                                        KeyboardNavigation.DirectionalNavigation="Cycle" 
                            Background="{StaticResource MenuItemColor}"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <ContextMenu x:Key="UninstallContextMenu" Style="{StaticResource ContextMenuStyle}">
            <MenuItem Header="Pin to task bar" Style="{StaticResource MenuItem}" IsChecked="{Binding PinnedToTaskbar}"
                      IsCheckable="True" Click="PinToTaskBarClick" DataContext="{Binding}" />
            <MenuItem Header="Uninstall" Style="{StaticResource MenuItem}" Click="UninstallAppClick"
                      DataContext="{Binding}" />
        </ContextMenu>
        <Style x:Key="YourAppsButtonGrid" TargetType="Grid">
            <Setter Property="HorizontalAlignment" Value="Center" />
            <Setter Property="VerticalAlignment" Value="Top" />
            <Setter Property="Width" Value="165" />
            <Setter Property="Height" Value="45" />
        </Style>
        <Style x:Key="TopPanelGridStyle" TargetType="Grid">
            <Setter Property="Margin" Value="0,2,0,0" />
            <Setter Property="VerticalAlignment" Value="Center" />
        </Style>
        <Style x:Key="TopPanelStackPanelStyle" TargetType="StackPanel">
            <Setter Property="Margin" Value="10,2,0,0" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="Orientation" Value="Horizontal" />
        </Style>
        <Style x:Key="TopPanelButton" TargetType="Button" BasedOn="{StaticResource BorderlessButton}">
            <Setter Property="Margin" Value="0,0,0,0" />
            <Setter Property="VerticalAlignment" Value="Top" />
            <Setter Property="HorizontalAlignment" Value="Center" />
            <Setter Property="Height" Value="30" />
            <Setter Property="Width" Value="100" />
            <Setter Property="FontSize" Value="13" />
        </Style>
        <Style x:Key="AlertsButton" TargetType="Button" BasedOn="{StaticResource TopPanelButton}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Grid Style="{StaticResource TopPanelGridStyle}">
                            <StackPanel Style="{StaticResource TopPanelStackPanelStyle}">
                                <Image Name="VerifyEmailImage" VerticalAlignment="Bottom" Margin="0,0,0,1.5"
                                       HorizontalAlignment="Left" Source="Images/email.png" Width="16" />
                                <TextBlock Name="VerifyEmailTextBlock" Margin="4,0,0,0"
                                           Style="{StaticResource TextStyle}" HorizontalAlignment="Left"
                                           Foreground="{StaticResource DisabledColor}" VerticalAlignment="Bottom">
                                    Verify Email
                                </TextBlock>
                            </StackPanel>
                            <Line Name="VerifyEmailUnderline" X1="2" Y1="28" X2="108" Y2="28"
                                  Stroke="{StaticResource DefaultTextColor}" StrokeThickness="1" Visibility="Hidden" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="VerifyEmailTextBlock" Property="Foreground"
                                        Value="{StaticResource DefaultTextColor}" />
                                <Setter TargetName="VerifyEmailImage" Property="Source" Value="Images/email.png" />
                                <Setter TargetName="VerifyEmailUnderline" Property="Visibility" Value="Visible" />
                            </Trigger>
                            <Trigger Property="IsFocused" Value="True">
                                <Setter TargetName="VerifyEmailTextBlock" Property="Foreground"
                                        Value="{StaticResource AlertTextColor}" />
                                <Setter TargetName="VerifyEmailImage" Property="Source" Value="Images/email.png" />
                                <Setter TargetName="VerifyEmailUnderline" Property="Visibility" Value="Visible" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="CloudSyncButton" TargetType="Button" BasedOn="{StaticResource TopPanelButton}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Grid Style="{StaticResource TopPanelGridStyle}">
                            <StackPanel Style="{StaticResource TopPanelStackPanelStyle}" Margin="6,2,0,0">
                                <Image Name="CloudSyncImage" VerticalAlignment="Bottom" Margin="0,0,0,.5"
                                       HorizontalAlignment="Left" Source="Images/cloudGrey.png" Width="20" />
                                <TextBlock Name="CloudSyncTextBlock" HorizontalAlignment="Left"
                                           Style="{StaticResource TextStyle}"
                                           Foreground="{StaticResource DisabledColor}" VerticalAlignment="Bottom">
                                    Cloud Sync
                                </TextBlock>
                            </StackPanel>
                            <Line Name="CloudSyncUnderline" X1="0" Y1="28" X2="100" Y2="28"
                                  Stroke="{StaticResource DefaultTextColor}" StrokeThickness="1" Visibility="Hidden" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="CloudSyncTextBlock" Property="Foreground"
                                        Value="{StaticResource DefaultTextColor}" />
                                <Setter TargetName="CloudSyncImage" Property="Source" Value="Images/cloudWhite.png" />
                                <Setter TargetName="CloudSyncUnderline" Property="Visibility" Value="Visible" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="MyAppsButton" TargetType="Button" BasedOn="{StaticResource TopPanelButton}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Grid Style="{StaticResource TopPanelGridStyle}">
                            <StackPanel Style="{StaticResource TopPanelStackPanelStyle}" Margin="14,0,0,0">
                                <Image Name="MyAppsImage" VerticalAlignment="Bottom" HorizontalAlignment="Left"
                                       Source="Images/myAppGrey.png" Width="14" />
                                <TextBlock Name="MyAppsTextBlock" Margin="8,0,0,0" HorizontalAlignment="Left"
                                           Foreground="{StaticResource DisabledColor}"
                                           Style="{StaticResource TextStyle}" VerticalAlignment="Bottom">
                                    My Apps
                                </TextBlock>
                            </StackPanel>
                            <Line Name="MyAppsUnderline" X1="3" Y1="28" X2="94" Y2="28"
                                  Stroke="{StaticResource DefaultTextColor}" StrokeThickness="1" Visibility="Hidden" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="MyAppsTextBlock" Property="Foreground"
                                        Value="{StaticResource DefaultTextColor}" />
                                <Setter TargetName="MyAppsImage" Property="Source" Value="Images/myAppWhite.png" />
                                <Setter TargetName="MyAppsUnderline" Property="Visibility" Value="Visible" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="True">
                                <Setter TargetName="MyAppsTextBlock" Property="Foreground"
                                        Value="{StaticResource DefaultTextColor}" />
                                <Setter TargetName="MyAppsImage" Property="Source" Value="Images/myAppWhite.png" />
                                <Setter TargetName="MyAppsUnderline" Property="Visibility" Value="Visible" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="AppButton" TargetType="Button" BasedOn="{StaticResource BorderlessButton}">
            <Setter Property="Height" Value="45" />
            <Setter Property="Width" Value="165" />
            <Setter Property="VerticalAlignment" Value="Top" />
            <Setter Property="Margin" Value="0,0,15,2"></Setter>
            <Setter Property="ContextMenu" Value="{StaticResource UninstallContextMenu}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Grid Name="App" Style="{StaticResource YourAppsButtonGrid}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="55" />
                                <ColumnDefinition Width="100*" />
                            </Grid.ColumnDefinitions>
                            <Image Name="BackgroundImage" Grid.ColumnSpan="2" VerticalAlignment="Top"
                                   HorizontalAlignment="Left" Source="Images\AppBtnDefault.png" />
                            <Image Grid.Column="0" VerticalAlignment="Top" HorizontalAlignment="Left" Margin="2,2,0,0"
                                   Width="37" Height="37" Source="{Binding LocalImagePath}" />
                            <Image Grid.Column="0" VerticalAlignment="Top" HorizontalAlignment="Left" Margin="2,2,0,0"
                                   Width="37" Height="37" Source="Images/IconMask.png" />
                            <TextBlock Grid.Column="1" VerticalAlignment="Center" HorizontalAlignment="Left"
                                       FontSize="13" Style="{StaticResource TextStyle}" Width="125"
                                       Text="{Binding Name}" />
                            <Image Name="OnHoverMask" Grid.ColumnSpan="2" Margin="-2,2,0,0" VerticalAlignment="Top"
                                   HorizontalAlignment="Left" Source="Images\AppOnHoverMask.png" Visibility="Hidden" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Visibility" TargetName="OnHoverMask" Value="Visible" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="InstallAppButton" TargetType="Button">
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="Foreground" Value="White" />
            <Setter Property="FontFamily" Value="{StaticResource DefaultWindowFont}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Grid HorizontalAlignment="Left" VerticalAlignment="Top" Width="140">
                            <Rectangle Fill="{StaticResource RightPanelColor}"></Rectangle>
                            <Grid HorizontalAlignment="Left" VerticalAlignment="Top" Width="34" Height="34">
                                <Image HorizontalAlignment="Center" VerticalAlignment="Center" Width="30" Height="30"
                                       Source="{Binding LocalImagePath}" />
                                <Image Name="Mask" HorizontalAlignment="Center" VerticalAlignment="Center" Width="34"
                                       Height="34" Source="Images/crossBtn_default.png" />
                            </Grid>
                            <StackPanel Margin="50,3,0,0">
                                <TextBlock TextTrimming="CharacterEllipsis" FontSize="12" Margin="0,0,0,2"
                                           VerticalAlignment="Center" Text="{Binding Name}">
                                </TextBlock>
                            </StackPanel>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="Mask" Property="Source" Value="Images\crossBtn_hover.png" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="Mask" Property="Source" Value="Images\crossBtn_click.png" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ScrollBarThumb" TargetType="{x:Type Thumb}">
            <Setter Property="SnapsToDevicePixels" Value="True" />
            <Setter Property="OverridesDefaultStyle" Value="true" />
            <Setter Property="IsTabStop" Value="false" />
            <Setter Property="Focusable" Value="false" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Border
                            Background="{TemplateBinding Background}" >
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="7" />
                                    <ColumnDefinition Width="5" />
                                    <ColumnDefinition Width="7" />
                                </Grid.ColumnDefinitions>
                                <Rectangle Grid.Column="0" Fill="Transparent"></Rectangle>
                                <Rectangle Grid.Column="1" Fill="#383c44"></Rectangle>
                                <Rectangle Grid.Column="2" Fill="Transparent"></Rectangle>
                            </Grid>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <ControlTemplate x:Key="VerticalScrollBar" TargetType="{x:Type ScrollBar}">
            <Grid Height="230" VerticalAlignment="Top">
                <Border BorderThickness="1">
                    <Border.Background>
                        <ImageBrush ImageSource="Images/ScrollBarBackground.png" />
                    </Border.Background>
                </Border>
                <Track Name="PART_Track" Grid.Row="0" IsDirectionReversed="true">
                    <Track.Thumb>
                        <Thumb
                            Style="{StaticResource ScrollBarThumb}"
                            Width="19" Background="Transparent" />
                    </Track.Thumb>
                </Track>
            </Grid>
        </ControlTemplate>
        <Style x:Key="ScrollBar" TargetType="{x:Type ScrollBar}">
            <Setter Property="SnapsToDevicePixels" Value="True" />
            <Setter Property="OverridesDefaultStyle" Value="true" />
            <Setter Property="Margin" Value="0,60,30,0" />
            <Style.Triggers>
                <Trigger Property="Orientation" Value="Vertical">
                    <Setter Property="Width" Value="19" />
                    <Setter Property="Height" Value="Auto" />
                    <Setter Property="Template" Value="{StaticResource VerticalScrollBar}" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <ControlTemplate x:Key="ScrollViewerControlTemplate1" TargetType="{x:Type ScrollViewer}">
            <Grid x:Name="Grid" Background="{TemplateBinding Background}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <ScrollContentPresenter x:Name="PART_ScrollContentPresenter"
                                        CanContentScroll="{TemplateBinding CanContentScroll}"
                                        CanHorizontallyScroll="False" CanVerticallyScroll="False"
                                        ContentTemplate="{TemplateBinding ContentTemplate}"
                                        Content="{TemplateBinding Content}" Grid.Column="0"
                                        Margin="{TemplateBinding Padding}" />
                <ScrollBar x:Name="PART_VerticalScrollBar" Opacity="0"
                           AutomationProperties.AutomationId="VerticalScrollBar" Cursor="Arrow" Grid.Column="1"
                           Maximum="{TemplateBinding ScrollableHeight}" Minimum="0"
                           Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
                           Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
                           ViewportSize="{TemplateBinding ViewportHeight}" Style="{StaticResource ScrollBar}" />
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Trigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard TargetName="PART_VerticalScrollBar">
                                <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                                 To="1" Duration="0:0:.4" />
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.EnterActions>
                    <Trigger.ExitActions>
                        <BeginStoryboard>
                            <Storyboard TargetName="PART_VerticalScrollBar">
                                <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                                 To="0.0" Duration="0:0:.3" />
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.ExitActions>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <Style x:Key="ListBoxStyle" TargetType="{x:Type ListBox}">
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
            <Setter Property="ScrollViewer.CanContentScroll" Value="true" />
            <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListBox}">
                        <Grid>
                            <Border CornerRadius="0" x:Name="Bd" BorderThickness="0" SnapsToDevicePixels="true">
                                <ScrollViewer Name="ScrollBar" Focusable="false" Padding="{TemplateBinding Padding}"
                                              Template="{StaticResource ScrollViewerControlTemplate1}">
                                    <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                </ScrollViewer>
                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsGrouping" Value="true">
                                <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    <Grid Name="ContentGrid" Margin="0,0,0,0">
        <Grid Name="MainViewGrid" Visibility="Visible">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="{StaticResource LeftColumnWidth}" />
                <ColumnDefinition Width="{StaticResource RightColumnWidth}" />
            </Grid.ColumnDefinitions>
            <Rectangle Name="LeftPanel" Fill="{StaticResource LeftPanelColor}" Opacity="0.30"
                       HorizontalAlignment="Left" VerticalAlignment="Top" Width="670" Height="320" Margin="5,5,0,0"
                       Grid.Column="0" />
            <Rectangle Name="RightPanel" Fill="{StaticResource RightPanelColor}" HorizontalAlignment="Left"
                       Width="{StaticResource RightPanelWidth}" Margin="0,2,2,2" Grid.Column="1" />
            <Grid Name="TopMenuGrid" Height="30" VerticalAlignment="Top" Margin="5,0,0,0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="88" />
                    <ColumnDefinition Width="95" />
                    <ColumnDefinition Width="95" />
                    <ColumnDefinition Width="95" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <Button Name="MyAppsButton" Grid.Column="0" Style="{StaticResource MyAppsButton}" />
                <Button Name="SyncButton" Click="SyncButtonOnClick" Grid.Column="1"
                        Style="{StaticResource CloudSyncButton}" Visibility="{Binding CloudSyncVisibility}" />
                <Button Name="AlertsButton" Grid.Column="1" Style="{StaticResource AlertsButton}"
                        Visibility="{Binding VerifyEmailVisibility}" />
                <Menu Name="SettingsMenu" Background="Transparent" Grid.Column="4" VerticalAlignment="Center"
                      HorizontalAlignment="Right" Width="30">
                    <MenuItem Style="{StaticResource TopLevelMenuItem}" SubmenuClosed="Settings_OnSubmenuClosed">
                        <MenuItem Style="{StaticResource SubMenuItem}" Name="UpdateCheckMenuItem"
                                  Header="{Binding UpdateAvailableString}" Visibility="{Binding UpdateAvailableVisibility}" >
                        </MenuItem>
                        <MenuItem Style="{StaticResource SubMenuItem}" Name="UpdateMenuItem"
                                  Header="{Binding UpdateString}" Click="UpdateButtonOnClick" >
                            <MenuItem.Icon>
                                <Grid>
                                    <Image Source="Images/wrench.png" Width="12" />
                                    <Grid Background="{StaticResource MenuItemHoverColor}" Visibility="{Binding UpdateSpinnerVisibility}" >
                                        <ProgressBar Margin="3,0,0,0" Name ="Spinner" Style="{StaticResource SpinnerProgress}"></ProgressBar>
                                    </Grid>
                                </Grid>
                            </MenuItem.Icon>
                        </MenuItem>
                        <MenuItem Name="LogOutMenuItem" Style="{StaticResource SubMenuItem}" Header="Log out"
                                  Click="Logout_Click" Visibility="{Binding LogOutVisibility}">
                            <MenuItem.Icon>
                                <Image Source="Images/logout.png" Width="12" />
                            </MenuItem.Icon>
                        </MenuItem>
                        <MenuItem Name="AboutMenuItem" Style="{StaticResource SubMenuItem}" Header="About" Click="AboutMenuItem_OnClick">
                            <MenuItem.Icon>
                                <Image Source="Images/about.png" Width="12" />
                            </MenuItem.Icon>
                        </MenuItem>
                    </MenuItem>
                </Menu>
                <Line Grid.ColumnSpan="5" X1="5" Y1="30" X2="420" Y2="30" Stroke="#656565" StrokeThickness="1" />
            </Grid>
            <Grid Name="VerifyEmailGrid" Visibility="Hidden" Background="#000708" Width="380" Height="200"
                  Opacity=".80" VerticalAlignment="Top" Margin="0,38,0,0">
                <Border BorderBrush="{StaticResource DisabledColor}" BorderThickness="1">
                    <StackPanel HorizontalAlignment="Center">
                        <TextBlock Margin="0,12,0,0" HorizontalAlignment="Center"
                                   Foreground="{StaticResource AlertTextColor}" FontSize="14">
                            Please confirm your email address
                        </TextBlock>
                        <TextBlock Margin="0,12,0,0" HorizontalAlignment="Center" Foreground="#969696" FontSize="12">A confirmation email has been sent to:</TextBlock>
                        <TextBlock Margin="0,12,0,0" HorizontalAlignment="Center" Foreground="#969696" FontSize="12"
                                   Text="{Binding UserName}" />
                        <TextBlock Margin="0,12,0,0" HorizontalAlignment="Center" Foreground="#383434" FontSize="12">Click on the confirmation link in the email to</TextBlock>
                        <TextBlock Margin="0,0,0,0" HorizontalAlignment="Center" Foreground="#383434" FontSize="12">activate your account</TextBlock>
                        <Button Margin="0,24,0,0" Style="{StaticResource LoginButtonDefault}" Height="24" Width="90">OK</Button>
                    </StackPanel>
                </Border>
            </Grid>
            <Grid Name="YourApps" Margin="30,60,0,0" Height="235" Width="400" VerticalAlignment="Top"
                          HorizontalAlignment="Left">
                <ListBox BorderThickness="0" Background="Transparent"
                                 ScrollViewer.VerticalScrollBarVisibility="Disabled"
                                 ScrollViewer.HorizontalScrollBarVisibility="Disabled" Name="MyAppsListBox"
                                 ItemsSource="{Binding MyApplications}" >
                    <ListBox.ItemsPanel>
                        <ItemsPanelTemplate>
                            <WrapPanel IsItemsHost="True" />
                        </ItemsPanelTemplate>
                    </ListBox.ItemsPanel>
                    <ListBox.ItemTemplate>
                        <DataTemplate>
                            <Button Style="{StaticResource AppButton}" Click="AppButtonClick" />
                        </DataTemplate>
                    </ListBox.ItemTemplate>
                    <ListBox.Resources>
                        <Style TargetType="ListBoxItem">
                            <Setter Property="Focusable" Value="False"></Setter>
                            <Setter Property="Margin" Value="4,0,0,0"></Setter>
                        </Style>
                    </ListBox.Resources>
                </ListBox>
                <StackPanel Name="ErrorLoadingYourApps" Margin="0,240,0,0" Orientation="Horizontal"
                                    Grid.ColumnSpan="2">
                    <TextBlock Text="{Binding MyAppsLoadError}" HorizontalAlignment="Left" Margin="0,0,0,0"
                                       VerticalAlignment="Top" Width="345" Height="20" Foreground="White" />
                </StackPanel>
            </Grid>
            <Grid Grid.Column="1" Margin="0,0,0,0">
                <TextBlock Name="SuggestedAppsLabel" Style="{StaticResource TextStyle}" FontSize="13" Padding="0"
                           Grid.Column="1" Foreground="White" Text="Available Apps" HorizontalAlignment="Left"
                           Margin="30,30,0,0" VerticalAlignment="Top" />
                <ListBox Style="{StaticResource ListBoxStyle}" Height="{StaticResource WindowHeight}"
                         VerticalAlignment="Top" Padding="30,60,30,20" Name="SuggestedListBox"
                         ItemsSource="{Binding SuggestedApplications}">
                    <ListBox.Resources>
                        <Style TargetType="ListBoxItem">
                            <Setter Property="Focusable" Value="False"></Setter>
                        </Style>
                    </ListBox.Resources>
                    <ListBox.ItemTemplate>
                        <DataTemplate>
                            <Button Style="{StaticResource InstallAppButton}" Height="34" Margin="0,0,0,10"
                                    PreviewMouseLeftButtonDown="InstallApp_DoubleClick" Click="InstallApp_OnClick" />
                        </DataTemplate>
                    </ListBox.ItemTemplate>
                </ListBox>
                <Rectangle Name="SuggestedAppsBottom" Fill="{StaticResource RightPanelColor}"
                           HorizontalAlignment="Left" VerticalAlignment="Bottom" Width="160" Height="30"
                           Margin="10,5,0,10" Grid.Column="0">
                    <Rectangle.Effect>
                        <BlurEffect Radius="8"></BlurEffect>
                    </Rectangle.Effect>
                </Rectangle>
            </Grid>
            <TextBlock Text="{Binding SuggestedAppsLoadError}" HorizontalAlignment="Left" Margin="75,300,0,0"
                       VerticalAlignment="Top" Width="368" Height="20" Foreground="White" Grid.ColumnSpan="2" />
            <Label Name="Version" Content="{Binding VersionString }" Margin="10,0,0,10" VerticalAlignment="Bottom"
                   Height="30" HorizontalAlignment="Left" />
        </Grid>
        <controls:LoginView x:Name="LoginViewControl" Visibility="Hidden" />
        <controls:RegistrationView x:Name="RegistrationViewControl" Visibility="Hidden" />
    </Grid>
</Window>